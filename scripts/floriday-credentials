#!/usr/bin/env bash
# Script to manage Floriday credentials using 1Password.
#
# This script must be sourced to modify environment variables:
#
#   Load credentials:
#     source ./scripts/floriday-credentials load "Serra Vine"
#
#   Unset credentials:
#     source ./scripts/floriday-credentials unset "Serra Vine"
#
# Note: The script will remind you if you forget to source it.

check_sourced() {
    if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
        echo "Error: This script must be sourced, not executed." >&2
        echo "Usage:" >&2
        echo "  source ${BASH_SOURCE[0]} COMMAND [ARGS]" >&2
        exit 1
    fi
}

check_op_version() {
    if ! command -v op &> /dev/null; then
        echo "Error: 1Password CLI (op) not found or not accessible" >&2
        return 1
    fi

    version=$(op --version)
    if [[ ! $version == 2.30* ]]; then
        echo "Warning: This script was designed for op CLI version 2.30" >&2
    fi
}

init_variables() {
    local vault="$1"
    VARIABLES=()
    
    # Read variables from .env.example and check if they exist in vault
    while read -r line; do
        # Skip empty lines and comments
        [[ -z "$line" || "$line" =~ ^# ]] && continue
        # Extract variable name before the = sign
        var=${line%%=*}
        # Only add variables that exist in the vault
        if op item get "Floriday Staging" --vault "$vault" --field "$var" --reveal >/dev/null 2>&1; then
            VARIABLES+=("$var")
        fi
    done < .env.example
}

load_credentials() {
    local vault="$1"
    if [ -z "$vault" ]; then
        echo "Error: Vault name is required" >&2
        echo "Usage: source $0 load VAULT_NAME" >&2
        return 1
    fi

    check_op_version || return 1
    init_variables "$vault"

    # Load each variable from 1Password
    for var in "${VARIABLES[@]}"; do
        value=$(op item get "Floriday Staging" --vault "$vault" --field "$var" --reveal)
        export "$var=$value"
        echo "Set $var"
    done
}

unset_credentials() {
    local vault="$1"
    if [ -z "$vault" ]; then
        echo "Error: Vault name is required" >&2
        echo "Usage: source $0 unset VAULT_NAME" >&2
        return 1
    fi

    check_op_version || return 1
    init_variables "$vault"

    for var in "${VARIABLES[@]}"; do
        if env | grep -q "^${var}="; then
            unset "$var"
            echo "Unset $var"
        fi
    done
}

check_sourced

case "$1" in
    "load")
        load_credentials "$2"
        ;;
    "unset")
        unset_credentials "$2"
        ;;
    *)
        echo "Usage: source $0 COMMAND [ARGS]" >&2
        echo "" >&2
        echo "Commands:" >&2
        echo "  load VAULT_NAME    Load Floriday credentials from 1Password" >&2
        echo "  unset VAULT_NAME   Unset Floriday credentials from 1Password" >&2
        return 1
        ;;
esac
